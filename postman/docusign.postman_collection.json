{
	"info": {
		"_postman_id": "e7f1d728-096b-46f1-afa2-ab259c03b6e3",
		"name": "docusign",
		"description": "- Create a DocuSign developer account\n    \n- create/add the app and integration key\n    \n\n<img src=\"https://content.pstmn.io/19eef45c-d68b-45d7-9ace-d0e282ee2d9c/YXBwcy1hbmQta2V5cy5wbmc=\">\n\nhere is a more detailed example [https://www.youtube.com/watch?v=FO5szVDu7PE&amp;ab_channel=DocusignDevelopers](https://www.youtube.com/watch?v=FO5szVDu7PE&ab_channel=DocusignDevelopers)\n\n- you must set an environment with the following variables:\n    \n    - e_docuSign_client_id: is the integration key of the app this also called \"Client Id\"\n        \n    - e_docuSign_api_account_id: you can find this value in apps-and-keys module, \"My Account Information\" section => \"API account id\"\n        \n    - e_docuSign_basic_auth: is the base64 of Integration-Key:Secret Key, then, from the app created in docuSign/apps-and-keys take the respective ntegration Key or Client Id, for the Secret Key, enter to the app and generate the respect secret-key\n        \n\n<img src=\"https://content.pstmn.io/d0b05e91-9f6c-44d4-a924-481188523ec4/YXBwLXNldHRpbmdzLXNlY3JldC1rZXkucG5n\">\n\n- in the app settings, add redirects URIs (whatever URI), ex:\n    \n\n<img src=\"https://content.pstmn.io/af646e54-8ebd-4274-807e-228561518a7d/YXBwLXNldHRpbmdzLWFkZGl0aW9uYWwtc2V0dGluZ3MucG5n\">\n\nfor the simple exercise as Redirect URI was set the localhost then when you execute the first step or first request in the browser, you should take the code generated: Here is a more detailed example (min 4:05) [https://www.youtube.com/watch?v=4cn7Mvmq0Lo&amp;ab_channel=DocusignDevelopers](https://www.youtube.com/watch?v=4cn7Mvmq0Lo&ab_channel=DocusignDevelopers)\n\n**CONSUME DOCUSIGN SERVICES**\n\n**STEP 1**\n\nso, in the collection go to the folder \"getAccessTokenCodeGrant\" go to requests \"1-oauth-get-code-for-access-token\" copy the url and replace {{e_docuSign_client_id}} with the respective value, in the browser executes the url and when this run will redirect you to the redirect URI that you set previously, result expected:\n\n<img src=\"https://content.pstmn.io/cce09861-d6be-4d5c-96ae-b600606e0047/Y29kZS1nZW5lcmF0ZWQucG5n\">\n\ncopy the code generated, and in the collection, go to pre-request a paste the code in the collection variable \"c_docuSign_code\"\n\nthe previous step should be executed only the first time that you import the collection cause once you execute the step 2 you will have access token and refresh token and with this last you can generate the access token with the request \"M-refresh-token\"\n\n**STEP 2**\n\nexecute the request \"2-get-access-token\" this will set access_token and refresh_token as collection variables automatically\n\n**STEP 3**\n\nyou can run \"3-get-user-info\" or \"3-get-brands\" which are requests to confirm the access_token works, then if this work you can consume other services:\n\nWhen access_token expires, you can run \"M-refresh-token\" to refresh the tokens, this requests will also set the tokens\n\n**SEND ENVELOPES FOR SIGNATURE**\n\nthis is the order of execution requests to generate the url to sign documents\n\n- send-envelopes: send envelopes to the respective singers defined\n    \n- update-envelope: update the envelop with clientUserId for all signers\n    \n- embeded-signing: generate the url to copy and sing the document, must be execute once per signer defined in the envelop (send-envelopes), the info must match with the info submitted in previous requests\n    \n\nget-signing-status: check the envelop status, once the all documents have been signed the status should be completed\n\nget-recipients: Check signature status\n\nthese services use to update info of recipients and envelope, but cannot change the status to completedupdate-recipientsupdate-envelope",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19020588"
	},
	"item": [
		{
			"name": "getAccessTokenCodeGrant",
			"item": [
				{
					"name": "1-oauth-get-code-for-access-token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//copy the link in the browser to get the code"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//copy the link in the browser to get the code"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://account-d.docusign.com/oauth/auth?response_type=code&scope=signature&client_id={{e_docuSign_client_id}}&redirect_uri=http://localhost/",
							"protocol": "https",
							"host": [
								"account-d",
								"docusign",
								"com"
							],
							"path": [
								"oauth",
								"auth"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "scope",
									"value": "signature"
								},
								{
									"key": "client_id",
									"value": "{{e_docuSign_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "http://localhost/"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2-get-access-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resBody = pm.response.json()",
									"",
									"pm.collectionVariables.set(\"c_docuSign_access_token\", resBody.access_token);",
									"pm.collectionVariables.set(\"c_docuSign_refresh_token\", resBody.refresh_token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{e_docuSign_basic_auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{c_docuSign_code}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://account-d.docusign.com/oauth/token",
							"protocol": "https",
							"host": [
								"account-d",
								"docusign",
								"com"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "get-access-token-200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{e_docuSign_basic_auth}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{c_docuSign_code}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://account-d.docusign.com/oauth/token",
									"protocol": "https",
									"host": [
										"account-d",
										"docusign",
										"com"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-DocuSign-TraceToken",
									"value": "bae26e20-b781-4ad6-9185-fb742b3a4b62"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block; report=/client-errors/xss"
								},
								{
									"key": "X-DocuSign-Node",
									"value": "DA1DFE4"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer,strict-origin-when-cross-origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Sep 2024 21:17:40 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1445"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJNVCIsImFsZyI6IlJTMjU2Iiwia2lkIjoiNjgxODVmZjEtNGU1MS00Y2U5LWFmMWMtNjg5ODEyMjAzMzE3In0.AQoAAAABAAUABwCAyEpRleHcSAgAgAhuX9jh3EgCAJMVCwEI1pRLpRYJQJK-RI4VAAEAAAAYAAEAAAAFAAAADQAkAAAANjEzMDdhZGEtOTk5Ny00OTk0LWJiOTEtMGNmN2FkOWIzZWMxIgAkAAAANjEzMDdhZGEtOTk5Ny00OTk0LWJiOTEtMGNmN2FkOWIzZWMxMACAkxC-kuHcSDcAKpNt-UGjJk2fIoHar9mKZQ.u4YabzVdDNz6DJS2ES5p-b7tQa5eESq2ixzECwVqZY4nmZqNDg4ECyqyFhcS7IhDjDF-_0xUofo-xp-EW1APgjz3KLbasp4QXhW94jKkSgwimPGU4pHoScIVBsqwJYEg8CZVkPTsCIuuvLuSI6N-mZkT4Ylz8k8Tv_wIQO7NJk8SOWBSB2h9pKKyNTbO9FOjKDHdE5EiNIhz5Derd2Oswj4TJxLQht2EaYPgyfXGyTxjajaw7QaUfj-irEVISoApQKJbLQyA1cjnnI2SS6zeWyzE1c6XjEbea1Zf7CbghhWOKcqbJA5xUcSbAOzxCchzWtG10MMAhOsvrf4rJ3wZwA\",\n    \"token_type\": \"Bearer\",\n    \"refresh_token\": \"eyJ0eXAiOiJNVCIsImFsZyI6IlJTMjU2Iiwia2lkIjoiNjgxODVmZjEtNGU1MS00Y2U5LWFmMWMtNjg5ODEyMjAzMzE3In0.AQoAAAABAAgABwCAyEpRleHcSAgAgEivSSj53EgCAJMVCwEI1pRLpRYJQJK-RI4VAAEAAAAYAAEAAAAFAAAADQAkAAAANjEzMDdhZGEtOTk5Ny00OTk0LWJiOTEtMGNmN2FkOWIzZWMxIgAkAAAANjEzMDdhZGEtOTk5Ny00OTk0LWJiOTEtMGNmN2FkOWIzZWMxMACAkxC-kuHcSDcAKpNt-UGjJk2fIoHar9mKZQ.BCDQ7s1crG_X9PM-5oN78FNc2jBxBErqJN-3NQpL_RcPxTnYe8bQEwKEAJt6tnc3jXPDzAZP4PvZbcE9G6DbyoG43PjKS0AHoSRqzTowYBuGT7WK4-iLTSozFBtdviPfiS_BLht13xKII6NoMchRgKbi5gHohBxK2VOWv8R90PP0oqFzq1QhXOS02Nx5oxYfhWI58Zu6yTpVTaT5y64zWp0I19wLFF_O3vb6BbgRpkSPsDmst4H0wyzMbi-3fzjXInSrbYD-R4LHudVrEuKLwrv8E4rwb399iKPF0pXNfL-qc1vR25ILjJe0YEOxjHbmbR1m0BPp4U65dz171BWIAA\",\n    \"expires_in\": 28800,\n    \"scope\": \"signature\"\n}"
						}
					]
				},
				{
					"name": "3-get-user-info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://account-d.docusign.com/oauth/userinfo",
							"protocol": "https",
							"host": [
								"account-d",
								"docusign",
								"com"
							],
							"path": [
								"oauth",
								"userinfo"
							]
						}
					},
					"response": [
						{
							"name": "gte-user-info-200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{c_docuSign_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://account-d.docusign.com/oauth/userinfo",
									"protocol": "https",
									"host": [
										"account-d",
										"docusign",
										"com"
									],
									"path": [
										"oauth",
										"userinfo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-DocuSign-TraceToken",
									"value": "a62905e2-609f-4b09-acdf-1507b2abc97a"
								},
								{
									"key": "X-DocuSign-Node",
									"value": "DA1DFE179"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer,strict-origin-when-cross-origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Sep 2024 21:19:33 GMT"
								},
								{
									"key": "Content-Length",
									"value": "347"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								}
							],
							"cookie": [],
							"body": "{\n    \"sub\": \"XXXXxx93-XX08-xxXX-xxXX-XXXxxxxxXXXX-XXXXXXX\",\n    \"name\": \"PETER CROUCH\",\n    \"given_name\": \"PETER\",\n    \"family_name\": \"CROUCH\",\n    \"created\": \"2024-09-25T13:37:32.717\",\n    \"email\": \"EMAIL@gmail.com\",\n    \"accounts\": [\n        {\n            \"account_id\": \"XXXXxx93-XX08-xxXX-xxXX-XXXxxxxxXXXX-XXXXXXX\",\n            \"is_default\": true,\n            \"account_name\": \"Independiente\",\n            \"base_uri\": \"https://demo.docusign.net\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "get-users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://account-d.docusign.com/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/users",
							"protocol": "https",
							"host": [
								"account-d",
								"docusign",
								"com"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "3-get-brands",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/brands",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "test-save-array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const arraysito = [\"19608a78-64f9-4e71-8c24-52cb97f97310\", \"d855d7b6-5137-49e0-875f-fc2f0c3205e5\", \"13968646-8ca3-4edb-b008-403020f35344\", \"07e09159-9a0a-4186-9440-9f518fb85b53\", \"989bf07d-2e20-4bad-850b-ff6264f58b65\", \"e4b98619-6f07-4dfc-8364-95d865c61107\", \"d0284074-1a6d-4e53-9b1c-83e7c6b3182d\", \"c2ac2cbf-88d7-4d80-b8a2-5763ab87bb89\", \"471d72da-4ffe-41e0-9836-ee39a76736a3\"]",
									"",
									"pm.collectionVariables.set(\"c_docuSign_all_my_sent_envelopes\", arraysito)",
									"",
									"const resBody = pm.response.json()",
									"",
									"",
									"",
									"",
									"if (pm.response.code == 200) {",
									"    let getArraysito = pm.collectionVariables.get(\"c_new_array\")",
									"    console.log(`getArraysito FIRST= ${getArraysito}`)",
									"",
									"    getArraysito = Array.isArray(getArraysito) ? getArraysito : []",
									"",
									"    getArraysito.push(`${getArraysito.length + 1}`)",
									"",
									"    pm.collectionVariables.set(\"c_new_array\", getArraysito)",
									"    console.log(`getArraysito = ${getArraysito}`)",
									"",
									"    console.log(`getArraysito is ARRAY? = ${Array.isArray(getArraysito)}`)",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "M-refresh-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resBody = pm.response.json()",
									"",
									"pm.collectionVariables.set(\"c_docuSign_access_token\", resBody.access_token);",
									"pm.collectionVariables.set(\"c_docuSign_refresh_token\", resBody.refresh_token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{e_docuSign_basic_auth}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{c_docuSign_refresh_token}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://account-d.docusign.com/oauth/token",
							"protocol": "https",
							"host": [
								"account-d",
								"docusign",
								"com"
							],
							"path": [
								"oauth",
								"token"
							]
						}
					},
					"response": [
						{
							"name": "refresh-token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{e_docuSign_basic_auth}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "text"
										},
										{
											"key": "refresh_token",
											"value": "{{c_docuSign_refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://account-d.docusign.com/oauth/token",
									"protocol": "https",
									"host": [
										"account-d",
										"docusign",
										"com"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-DocuSign-TraceToken",
									"value": "c81db606-2d96-440c-8b3a-9723b0d8ccfb"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block; report=/client-errors/xss"
								},
								{
									"key": "X-DocuSign-Node",
									"value": "DA1DFE4"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains; preload"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer,strict-origin-when-cross-origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Sep 2024 21:24:17 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1475"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"\",\n    \"token_type\": \"Bearer\",\n    \"refresh_token\": \"\",\n    \"expires_in\": 28800,\n    \"scope\": \"signature\"\n}"
						}
					]
				},
				{
					"name": "send-envelopes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resBody = pm.response.json()",
									"const envelopeId = resBody.envelopeId",
									"pm.collectionVariables.set(\"c_docuSign_full_response_send_envelopes\", resBody)",
									"pm.collectionVariables.set(\"c_docuSign_envelope_id\", envelopeId)",
									"",
									"",
									"const status = \"sent\"//to generate uri for sign document",
									"//const status = \"created\"",
									"pm.collectionVariables.set(\"c_docuSign_envelope_status\", status)",
									"",
									"//19608a78-64f9-4e71-8c24-52cb97f97310,d855d7b6-5137-49e0-875f-fc2f0c3205e5,13968646-8ca3-4edb-b008-403020f35344,07e09159-9a0a-4186-9440-9f518fb85b53,989bf07d-2e20-4bad-850b-ff6264f58b65,e4b98619-6f07-4dfc-8364-95d865c61107,d0284074-1a6d-4e53-9b1c-83e7c6b3182d,c2ac2cbf-88d7-4d80-b8a2-5763ab87bb89,471d72da-4ffe-41e0-9836-ee39a76736a3,5ec8d90b-228d-4b5e-acea-4102ab427898",
									"",
									"if (pm.response.code == 201) {",
									"    let allMySentEnvelopes = pm.collectionVariables.get(\"c_docuSign_all_my_sent_envelopes\")",
									"    allMySentEnvelopes = Array.isArray(allMySentEnvelopes) ? allMySentEnvelopes : []",
									"    allMySentEnvelopes.push(envelopeId)",
									"    pm.collectionVariables.set(\"c_docuSign_all_my_sent_envelopes\", allMySentEnvelopes)",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const emailSginer1 = \"testdocusignautomation1@yopmail.com\"",
									"const emailSginer2 = \"testdocusignautomation2@yopmail.com\"",
									"pm.collectionVariables.set(\"c_email_signer_1\", emailSginer1)",
									"pm.collectionVariables.set(\"c_email_signer_2\", emailSginer2)",
									"",
									"const signers = [",
									"    {",
									"        \"email\": emailSginer2,",
									"        \"name\": \"John Doe\",",
									"        \"recipientId\": \"1\",",
									"        //\"clientUserId\": \"clientUserId1\",//if it is sent email will not be sent use for embeded signing",
									"        \"tabs\": {",
									"            \"signHereTabs\": [",
									"                {",
									"                    \"xPosition\": \"100\",",
									"                    \"yPosition\": \"600\",",
									"                    \"documentId\": \"1\",",
									"                    \"pageNumber\": \"1\"",
									"                }",
									"            ]",
									"        }",
									"    },",
									"    {",
									"        \"email\": emailSginer2,",
									"        \"name\": \"Christoph Waltz\",",
									"        \"recipientId\": \"2\",",
									"        \"tabs\": {",
									"            \"signHereTabs\": [",
									"                {",
									"                    \"xPosition\": \"300\",",
									"                    \"yPosition\": \"600\",",
									"                    \"documentId\": \"1\",",
									"                    \"pageNumber\": \"1\"",
									"                }",
									"            ]",
									"        }",
									"    }",
									"]",
									"",
									"pm.variables.set(\"l_signers\", signers);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emailSubject\": \"Please sign this document\",\n    \"emailBlurb\": \"This is the document we talked about. Please sign it.\",\n    \"documents\": [\n        {\n            \"documentBase64\": \"\",\n            \"documentId\": \"1\",\n            \"fileExtension\": \"pdf\",\n            \"name\": \"Sample Document\"\n        }\n    ],\n    \"recipients\": {\n        \"signers\": {{l_signers}}\n    },\n    \"status\": \"{{c_docuSign_envelope_status}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes"
							]
						}
					},
					"response": [
						{
							"name": "send-envelopes",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{c_docuSign_access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailSubject\": \"Please sign this document\",\n  \"emailBlurb\": \"This is the document we talked about. Please sign it.\",\n  \"documents\": [\n    {\n      \"documentBase64\": \"\",\n      \"documentId\": \"1\",\n      \"fileExtension\": \"pdf\",\n      \"name\": \"Sample Document\"\n    }\n  ],\n  \"recipients\": {\n    \"signers\": [\n      {\n        \"email\": \"testdocusignautomation1@yopmail.com\",\n        \"name\": \"John Doe\",\n        \"recipientId\": \"1\",\n        \"tabs\": {\n          \"signHereTabs\": [\n            {\n              \"xPosition\": \"100\",\n              \"yPosition\": \"600\",\n              \"documentId\": \"1\",\n              \"pageNumber\": \"1\"\n            }\n          ]\n        }\n      },\n      {\n        \"email\": \"testdocusignautomation2@yopmail.com\",\n        \"name\": \"Peter Crouch\",\n        \"recipientId\": \"2\",\n        \"tabs\": {\n          \"signHereTabs\": [\n            {\n              \"xPosition\": \"300\",\n              \"yPosition\": \"600\",\n              \"documentId\": \"1\",\n              \"pageNumber\": \"1\"\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"status\": \"sent\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{c_docuSign_api_account_id}}/envelopes",
									"protocol": "https",
									"host": [
										"demo",
										"docusign",
										"net"
									],
									"path": [
										"restapi",
										"v2.1",
										"accounts",
										"{{c_docuSign_api_account_id}}",
										"envelopes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1727888400"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "2997"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "3000"
								},
								{
									"key": "X-BurstLimit-Remaining",
									"value": "499"
								},
								{
									"key": "X-BurstLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-DocuSign-TraceToken",
									"value": "874efd3f-8f89-4e07-8b14-d9778665c2c0"
								},
								{
									"key": "X-DocuSign-Node",
									"value": "DA102DFE53"
								},
								{
									"key": "Date",
									"value": "Wed, 02 Oct 2024 16:21:40 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"envelopeId\": \"5ec8d90b-228d-4b5e-acea-4102ab427898\",\n    \"uri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898\",\n    \"statusDateTime\": \"2024-10-02T16:21:40.0200000Z\",\n    \"status\": \"sent\"\n}"
						}
					]
				},
				{
					"name": "update-envelope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const signers = [",
									"    {",
									"        \"email\": \"testdocusignautomation4@yopmail.com\",",
									"        \"name\": \"John Doe\",",
									"        \"recipientId\": \"1\",",
									"        \"clientUserId\": \"clientUserId1\"",
									"    }",
									"]",
									"",
									"pm.variables.set(\"l_signers\", signers);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipients\": {\n        \"signers\": [\n            {\n                \"email\": {{c_email_signer_1}},\n                \"name\": \"John Doe\",\n                \"recipientId\": \"1\",\n                \"clientUserId\": \"clientUserId1\"\n            },\n            {\n                \"email\": {{c_email_signer_2}},\n                \"name\": \"Christoph Waltz\",\n                \"recipientId\": \"2\",\n                \"clientUserId\": \"clientUserId2\"\n            }\n        ]\n    } /* ,\n  \"status\": \"sent\" */\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "embeded-signing-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.json().url)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "/* {\n  \"returnUrl\": \"https://www.docusign.com/devcenter\",\n  \"authenticationMethod\": \"none\",\n  \"email\": \"{{c_email_signer_2}}\",\n  \"userName\": \"Christoph Waltz\",\n  \"clientUserId\": \"clientUserId2\",\n  \"recipientId\": \"2\" //sginer recipient ID\n  //email, userName, clientUserId, recipientId must match the request that generated the document\n} */\n\n{\n  \"returnUrl\": \"https://www.docusign.com/devcenter\",\n  \"authenticationMethod\": \"none\",\n  \"email\": \"{{c_email_signer_1}}\",\n  \"userName\": \"John Doe\",\n  \"clientUserId\": \"clientUserId1\",\n  \"recipientId\": \"1\" //sginer recipient ID\n  //email, userName, clientUserId, recipientId must match the request that generated the document\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}/views/recipient",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}",
								"views",
								"recipient"
							]
						}
					},
					"response": []
				},
				{
					"name": "embeded-signing-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.json().url)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"returnUrl\": \"https://www.docusign.com/devcenter\",\n  \"authenticationMethod\": \"none\",\n  \"email\": \"{{c_email_signer_2}}\",\n  \"userName\": \"Christoph Waltz\",\n  \"clientUserId\": \"clientUserId2\",\n  \"recipientId\": \"2\" //sginer recipient ID\n  //email, userName, clientUserId, recipientId must match the request that generated the document\n}\n\n/* {\n  \"returnUrl\": \"https://www.docusign.com/devcenter\",\n  \"authenticationMethod\": \"none\",\n  \"email\": \"{{c_email_signer_1}}\",\n  \"userName\": \"John Doe\",\n  \"clientUserId\": \"clientUserId1\",\n  \"recipientId\": \"1\" //sginer recipient ID\n  //email, userName, clientUserId, recipientId must match the request that generated the document\n} */",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}/views/recipient",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}",
								"views",
								"recipient"
							]
						}
					},
					"response": []
				},
				{
					"name": "get-signing-status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"19608a78-64f9-4e71-8c24-52cb97f97310\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"d855d7b6-5137-49e0-875f-fc2f0c3205e5\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"13968646-8ca3-4edb-b008-403020f35344\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"07e09159-9a0a-4186-9440-9f518fb85b53\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"989bf07d-2e20-4bad-850b-ff6264f58b65\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"e4b98619-6f07-4dfc-8364-95d865c61107\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"d0284074-1a6d-4e53-9b1c-83e7c6b3182d\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"c2ac2cbf-88d7-4d80-b8a2-5763ab87bb89\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"471d72da-4ffe-41e0-9836-ee39a76736a3\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"5ec8d90b-228d-4b5e-acea-4102ab427898\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"82ddd3c0-5a4f-42e9-83cf-c802ecb012d7\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"a8c1bd7a-40dc-45ae-9fb4-4853af40d079\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"51403920-04f8-4ac9-a00d-d887944f8c27\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"1db101c1-db61-454c-83ef-1706b934f531\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"87ebc8f4-efa7-485d-b90e-9a30cc1e8bbd\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"d0286e36-1213-4e92-a2bf-e0139a91054b\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"065bb7d2-cd5f-4667-9387-67640fe1024a\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"7855f15b-4064-4bc2-9d24-f362deeb9bc9\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"957a969f-b57f-4ef7-ac65-57107ae818cd\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}"
							]
						}
					},
					"response": [
						{
							"name": "get-signing-status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{c_docuSign_access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{c_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}",
									"protocol": "https",
									"host": [
										"demo",
										"docusign",
										"net"
									],
									"path": [
										"restapi",
										"v2.1",
										"accounts",
										"{{c_docuSign_api_account_id}}",
										"envelopes",
										"{{c_docuSign_envelope_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Content-Length",
									"value": "2020"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "1727888400"
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "2996"
								},
								{
									"key": "X-RateLimit-Limit",
									"value": "3000"
								},
								{
									"key": "X-BurstLimit-Remaining",
									"value": "499"
								},
								{
									"key": "X-BurstLimit-Limit",
									"value": "500"
								},
								{
									"key": "X-DocuSign-TraceToken",
									"value": "f8bbcf44-9c3d-4c71-9b86-63ff94b77553"
								},
								{
									"key": "X-DocuSign-Node",
									"value": "DA5DFE181"
								},
								{
									"key": "Date",
									"value": "Wed, 02 Oct 2024 16:29:37 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"sent\",\n    \"documentsUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/documents\",\n    \"recipientsUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/recipients\",\n    \"attachmentsUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/attachments\",\n    \"envelopeUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898\",\n    \"emailSubject\": \"Please sign this document\",\n    \"emailBlurb\": \"This is the document we talked about. Please sign it.\",\n    \"envelopeId\": \"5ec8d90b-228d-4b5e-acea-4102ab427898\",\n    \"signingLocation\": \"online\",\n    \"customFieldsUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/custom_fields\",\n    \"notificationUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/notification\",\n    \"enableWetSign\": \"true\",\n    \"allowMarkup\": \"false\",\n    \"allowReassign\": \"true\",\n    \"createdDateTime\": \"2024-10-02T16:21:38.7730000Z\",\n    \"lastModifiedDateTime\": \"2024-10-02T16:21:38.7870000Z\",\n    \"initialSentDateTime\": \"2024-10-02T16:21:40.0200000Z\",\n    \"sentDateTime\": \"2024-10-02T16:21:40.0200000Z\",\n    \"statusChangedDateTime\": \"2024-10-02T16:21:40.0200000Z\",\n    \"documentsCombinedUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/documents/combined\",\n    \"certificateUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/documents/certificate\",\n    \"templatesUri\": \"/envelopes/5ec8d90b-228d-4b5e-acea-4102ab427898/templates\",\n    \"expireEnabled\": \"true\",\n    \"expireDateTime\": \"2025-01-30T16:21:40.0200000Z\",\n    \"expireAfter\": \"120\",\n    \"sender\": {\n        \"userName\": \"Peter Crouch\",\n        \"userId\": \"010b1593-d608-4b94-a516-094092be448e\",\n        \"accountId\": \"f9aed89c-fe57-40c7-9d17-f7028be31d9a\",\n        \"email\": \"testdocusignautomation2@yopmail.com\",\n        \"ipAddress\": \"52.39.201.128\"\n    },\n    \"purgeState\": \"unpurged\",\n    \"envelopeIdStamping\": \"true\",\n    \"is21CFRPart11\": \"false\",\n    \"signerCanSignOnMobile\": \"true\",\n    \"autoNavigation\": \"true\",\n    \"isSignatureProviderEnvelope\": \"false\",\n    \"hasFormDataChanged\": \"false\",\n    \"allowComments\": \"true\",\n    \"hasComments\": \"false\",\n    \"allowViewHistory\": \"true\",\n    \"envelopeMetadata\": {\n        \"allowAdvancedCorrect\": \"true\",\n        \"enableSignWithNotary\": \"true\",\n        \"allowCorrect\": \"true\"\n    },\n    \"anySigner\": null,\n    \"envelopeLocation\": \"current_site\",\n    \"isDynamicEnvelope\": \"false\",\n    \"burnDefaultTabData\": \"false\"\n}"
						}
					]
				},
				{
					"name": "get-recipients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}/recipients",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}",
								"recipients"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-recipients",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"signers\": [\n        {\n            \"signatureInfo\": {\n                \"signatureName\": \"John Doe\",\n                \"signatureInitials\": \"JD\",\n                \"fontStyle\": \"docusign7\"\n            },\n            \"creationReason\": \"sender\",\n            \"isBulkRecipient\": \"false\",\n            \"requireUploadSignature\": \"false\",\n            \"name\": \"John Doe\",\n            \"firstName\": \"\",\n            \"lastName\": \"\",\n            \"email\": \"testdocusignautomation@yopmail.com\",\n            \"recipientId\": \"1\",\n            \"recipientIdGuid\": \"809f6e27-fe2a-41a2-a8a0-0a6412f48834\",\n            \"requireIdLookup\": \"false\",\n            \"userId\": \"a13c0a43-25cc-45a7-a180-ebf6a2699ae3\",\n            \"clientUserId\": \"clientUserId1\",\n            \"routingOrder\": \"1\",\n            \"status\": \"completed\",\n            \"completedCount\": \"1\",\n            \"signedDateTime\": \"2024-10-07T13:43:51.8900000Z\",\n            \"deliveredDateTime\": \"2024-10-07T13:43:39.6770000Z\",\n            \"sentDateTime\": \"2024-10-07T13:41:12.9930000Z\",\n            \"deliveryMethod\": \"email\",\n            \"recipientType\": \"signer\"\n        }\n    ],\n    \"agents\": [],\n    \"editors\": [],\n    \"intermediaries\": [],\n    \"carbonCopies\": [],\n    \"certifiedDeliveries\": [],\n    \"inPersonSigners\": [],\n    \"seals\": [],\n    \"witnesses\": [],\n    \"notaries\": [],\n    \"recipientCount\": \"1\",\n    \"currentRoutingOrder\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}/recipients",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}",
								"recipients"
							]
						}
					},
					"response": []
				},
				{
					"name": "download-signed-document",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}/documents/combined",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}",
								"documents",
								"combined"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-envelope",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"19608a78-64f9-4e71-8c24-52cb97f97310\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"d855d7b6-5137-49e0-875f-fc2f0c3205e5\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"13968646-8ca3-4edb-b008-403020f35344\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"07e09159-9a0a-4186-9440-9f518fb85b53\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"989bf07d-2e20-4bad-850b-ff6264f58b65\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"e4b98619-6f07-4dfc-8364-95d865c61107\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"d0284074-1a6d-4e53-9b1c-83e7c6b3182d\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"c2ac2cbf-88d7-4d80-b8a2-5763ab87bb89\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"471d72da-4ffe-41e0-9836-ee39a76736a3\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"5ec8d90b-228d-4b5e-acea-4102ab427898\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"82ddd3c0-5a4f-42e9-83cf-c802ecb012d7\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"a8c1bd7a-40dc-45ae-9fb4-4853af40d079\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"51403920-04f8-4ac9-a00d-d887944f8c27\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"1db101c1-db61-454c-83ef-1706b934f531\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"87ebc8f4-efa7-485d-b90e-9a30cc1e8bbd\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"d0286e36-1213-4e92-a2bf-e0139a91054b\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"065bb7d2-cd5f-4667-9387-67640fe1024a\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"7855f15b-4064-4bc2-9d24-f362deeb9bc9\")",
									"//pm.collectionVariables.set(\"c_docuSign_envelope_id\", \"957a969f-b57f-4ef7-ac65-57107ae818cd\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{c_docuSign_access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"sent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://demo.docusign.net/restapi/v2.1/accounts/{{e_docuSign_api_account_id}}/envelopes/{{c_docuSign_envelope_id}}",
							"protocol": "https",
							"host": [
								"demo",
								"docusign",
								"net"
							],
							"path": [
								"restapi",
								"v2.1",
								"accounts",
								"{{e_docuSign_api_account_id}}",
								"envelopes",
								"{{c_docuSign_envelope_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "redirect_uri",
				"value": "http://localhost/",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "clientSecret",
				"value": "18c270e2-b52b-4b11-87ac-c0c868028de2",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://account-d.docusign.com/oauth/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://account-d.docusign.com/oauth/auth?response_type=code",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "DocuSign-OAauth2",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "queryParams",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "61307ada-9997-4994-bb91-0cf7ad9b3ec1",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "signature",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.collectionVariables.set(\"c_docuSign_code\", \"eyJ0eXAiOiJNVCIsImFsZyI6IlJTMjU2Iiwia2lkIjoiNjgxODVmZjEtNGU1MS00Y2U5LWFmMWMtNjg5ODEyMjAzMzE3In0.AQoAAAABAAYABwCAUCv7dtPdSAgAgNyxQnfT3UgCAJMVCwEI1pRLpRYJQJK-RI4VAAEAAAAYAAEAAAAFAAAADQAkAAAANjEzMDdhZGEtOTk5Ny00OTk0LWJiOTEtMGNmN2FkOWIzZWMxIgAkAAAANjEzMDdhZGEtOTk5Ny00OTk0LWJiOTEtMGNmN2FkOWIzZWMxNwDeTJupZweRQIif-p1mQS61MAAAMBbaddPdSA.YBjS3ehSqmZPoIanQ7_EQxkQH_-IHF5rLIOrydPTUlA2T8T8XVrwCq0mCmbiHiYzbulkBqBow-BjVsIW2lCvOcH51P5FRaprr9T9QbkVQa9g47P0cWWIbA75gfA0PALh7HvQX_tvYBEqlnACFdolPp8bRkyNECtPqyjXYS8rRuheMuK2uIuMVNwiEng660ueSo9DnyipGgRMzCr6fwmZFU3R7fnP_yfoYbVRTzEk6sS1dqJuv4uD2XLXQkLO-7vwIdmyiT6gozAZ-0tSuLxjB9FiacBMowUJXC41LNFkP4sBPFE_h7VPrHsW4zOm0N7U_t8BP0FDkoxxNjaGXjRKMA\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "c_docuSign_code",
			"value": ""
		},
		{
			"key": "c_docuSign_access_token",
			"value": ""
		},
		{
			"key": "c_docuSign_refresh_token",
			"value": ""
		},
		{
			"key": "c_docuSign_full_response_send_envelopes",
			"value": "",
			"type": "string"
		},
		{
			"key": "c_docuSign_envelope_id",
			"value": "d855d7b6-5137-49e0-875f-fc2f0c3205e5",
			"type": "string"
		},
		{
			"key": "c_docuSign_all_my_sent_envelopes",
			"value": ""
		},
		{
			"key": "c_docuSign_envelope_status",
			"value": ""
		},
		{
			"key": "c_email_signer_1",
			"value": "",
			"type": "string"
		},
		{
			"key": "c_email_signer_2",
			"value": "",
			"type": "string"
		}
	]
}